什么是uni-app
	是一个基于vuejs语法来开发所有前端应用的框架，所以也被成为全段开发框架
	能开发h5，安卓，苹果，微信小程序
	
基础知识

使用
方法一通过hbuiderx创建uni-app
	项目目录
		App.vue 应用配置，用来配置App全局样式以及监听
		main.js vue初始化入口文件
		manifest.json 配置应用名称，appid，logo，版本等打包信息
		pages。json 配置页面路由，导航条，选项卡等页面类信息
		uni。scss 内置sass变量，可以直接使用
		pages
			index
				index.vue 页面组件
		static	静态资源
			logo.png

方法二 通过脚手架搭建
	1. npm i -g @vue/cli
	2. vue create -p dcloudio/uni-preset-vue my-project  创建项目
	3. 进入项目文件夹cd my-project 然后npm run dev:mp-weixin  启动项目（微信小程序）
	4. 微信小程序开发者工具导入项目 导入的位置是mp-weixin的文件夹 my_project\dist\dev\mp-weixin
	5. my_project中的src就是通过hbuider创建的默认uniapp模板
	
样式和sass
	支持小程序的rpx和h5的vw，vh
	内置有sass的配置，只需要安装对应依赖即可 npm i sass-loader node-sass
	vue组件中style标签加入属性《style lang=“scss”》 即可
	
基本语法
	数据的展示
		在js的data中定义数据
		data（）{ return{ title： “helloworld” } }
		在template中通过{{数据}}来显示
		在标签的属性上通过 :data-index="数据" 来使用
		<view :data-title="title">{{title}}</view>
	数据循环
		通过v-for 来指定要循环的数组
		item和index分别未循环项和循环索引
		：key指定唯一的属性，用来提高循环效率
		<view
		  v-for="(item,index) in list"
		  :key="item.id"
		>
		  {{item.text}}
		<>
	条件编译
		v-if
		v-show
	计算属性
		可以理解未对data中的数据提供了一种加工或者过滤的能力
		提供computed来定义计算属性
		可以通过这种方式过滤数据来代替v-for中使用v-if
		computed:{
			// 过滤
			filterList（）{
				return this。list。filter（v => v.id<=5)
			}
			// 加工
			pp(){
				return this.list.map(v=>{
					v.color = 'red'
					return v
				})
			}
		}


事件
	注册事件 @click = “handleClick“
	定义事件监听函数 需要在 ”methods“ 中定义
	事件的传参
	
	
组件
	定义
		src目录下新建文件夹 components用来存放组件
		在该文件夹下直接新建组件 *.vue
	引入
		import 组件名 from 路径
	注册
		页面实例中，新增属性components
		该属性是一个对象，把组件放进去注册
	使用
		<组件></组件>
		"pages": [
				{
					"path": "slide-view/slide-view",
					"style": {
						"navigationBarTitleText": "slide-view",
						"usingComponents": {
							// '组件名': '地址'
							"slide-view": "/wxcomponents/miniprogram-slide-view/index"
						}
					}
				}
			]
			
	父组件传参子组件
		通过属性的方式
		1 在父页面中通过v-bind动态绑定一个变量 比如父页面中有个msg， <son :m='msg'>
		2 在子页面中通过props获取 props:{ m: string }
		3 在子页面中使用 <div>{{m}}<>
		
	子传参父
		通过触发事件的方式
		1 父页面中通过@clickxx=“父页面中定义的函数”
		2 在子页面中通过 @click=“子页面中定义的函数”
		3 子页面中定义的函数里 通过 this.$emit('clickxx'，要传递的参数),调用父组件的函数
		
	使用全局数据传递参数
		挂载vue的原型上,main.js中 例如 Vue.prototype.xx = 'xx', 后面通过this.xx的方式获取
		通过globalData的方式 ，在App.vue中定义globalData,使用的时候 getApp().gloablData.base,还可以getApp().gloablData.base=xx 重新赋值
			

常用生命周期
	onLaunch 页面启动完毕
	onLoad 页面加载完毕
	onShow 页面被看到
	mounted 组件挂载完毕
	
	
uni-ui使用
	1 安装uni-ui  npm i @dcloudio/uni-ui
	2 使用uni-ui
		在script中引用组件
		import{ xx } from '@dcloudio/uni-ui'
		export default{
			components: { xx }
		}
	3 使用在template中 <xx></xx>
	
封装请求
	因为uni.request求回来时的数据是一个数组


momentjs的使用
	npm i moment -S

常用api

拨打电话
	uni.makePhoneCall({
					phoneNumber: '13678306811'
				})
	参数：
		phoneNumber	String		是	需要拨打的电话号码
		success		Function	否	接口调用成功的回调
		fail		Function	否	接口调用失败的回调函数
		complete	Function	否	接口调用结束的回调函数（调用成功、失败都会执行）
		
		
//  获取位置
// 使用时需要在manifest.json中设置
//	"permission": {
// 	"scope.userLocation":{
// 		"desc": "描述文本"
// 	}
// }
uni.getLocation({
	type: 'wgs84',
	success: function (res) {
		console.log('当前位置的经度：' + res.longitude);
		console.log('当前位置的纬度：' + res.latitude);
	}
});


使用应用内置地图查看位置。
uni.openLocation(OBJECT)
uni.getLocation({
	type: 'gcj02', //返回可以用于uni.openLocation的经纬度
	success: function (res) {
		const latitude = res.latitude;
		const longitude = res.longitude;
		uni.openLocation({
			latitude: latitude,
			longitude: longitude,
			success: function () {
				console.log('success');
			}
		});
	}
});

获取设备系统信息
let si = uni.getSystemInfo().then(res=>{
					this.toolMes = res[1]
					console.log(this.toolMes)
				})
				
				
				
				
